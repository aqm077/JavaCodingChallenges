class Solution {
    ArrayList<Integer> commonElements1(int A[], int B[], int C[], int n1, int n2, int n3) {
        HashSet<Integer> a = new HashSet<>();
        HashSet<Integer> b = new HashSet<>();
        HashSet<Integer> c = new HashSet<>();

        for (int n : A) a.add(n);
        for (int n : B) b.add(n);
        for (int n : C) c.add(n);

        ArrayList<Integer> result = new ArrayList<>();

        for (int i = 0; i < n1; i++) {
            if (a.contains(A[i]) && b.contains(A[i]) && c.contains(A[i])) {
                result.add(A[i]);
                a.remove(A[i]);
            }
        }

        return result;
    }

    ArrayList<Integer> commonElements2(int A[], int B[], int C[], int n1, int n2, int n3) {
        int i = 0, j = 0, k = 0;
        ArrayList<Integer> result = new ArrayList<>();

        while (i < n1 && j < n2 && k < n3) {
            if (A[i] == B[j] && B[j] == C[k]) {
                result.add(A[i]);
                i++;
                j++;
                k++;
            } else if (A[i] < B[j]) i++;
            else if (B[j] < C[k]) j++;
            else k++;

            while (i > 0 && i < n1 && A[i - 1] == A[i]) i++;
            while (j > 0 && j < n2 && B[j - 1] == B[j]) j++;
            while (k > 0 && k < n3 && C[k - 1] == C[k]) k++;
        }
        return result;
    }
}
