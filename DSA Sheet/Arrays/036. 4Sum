class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> result = new ArrayList();
        int n = nums.length;
        Arrays.sort(nums);

        for (int i = 0; i < n - 3; i++) {
            for (int j = i + 1; j < n - 2; j++) {
                int currentTarget = target - nums[i] - nums[j];
                int low = j + 1;
                int high = n - 1;

                while (low < high) {
                    if (nums[low] + nums[high] == currentTarget) {
                        result.add(Arrays.asList(nums[i], nums[j], nums[low], nums[high]));
                        while (low < high && nums[low] == nums[low + 1])
                            low++;
                        while (low < high && nums[high] == nums[high - 1])
                            high--;
                        low++;
                        high--;
                    } else if (nums[low] + nums[high] > currentTarget) {
                        high--;
                    } else {
                        low++;
                    }
                }

                while (j < n - 2 && nums[j] == nums[j + 1])
                    j++;
            }
            while (i < n - 3 && nums[i] == nums[i + 1])
                i++;
        }

        return result;
    }
}