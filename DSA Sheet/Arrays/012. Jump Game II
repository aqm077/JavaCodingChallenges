class Solution {
    public int jump1(int[] nums) {
        int result = 0;
        int l = 0, r = 0;

        while (r < nums.length - 1) {
            int farthest = 0;
            for (int i = l; i < r + 1; i++) {
                farthest = Math.max(farthest, i + nums[i]);
            }
            l = r + 1;
            r = farthest;
            result++;
        }
        return result;
    }

    public int jump2(int[] nums) {
        int farthest = 0;
        int current = 0;
        int jumps = 0;

        for (int i = 0; i < nums.length - 1; i++) {
            farthest = Math.max(farthest, i + nums[i]);

            if (i == current) {
                current = farthest;
                jumps++;
            }
        }

        return jumps;
    }
}