class RearrangeArray {
    // Utility function to right rotate all elements
    // between [wrongIndex, index]
    void rightRotate(int arr[], int from, int to) {
        int temp = arr[to];
        for (int i = to; i > from; i--)
            arr[i] = arr[i - 1];
        arr[from] = temp;
    }

    void rearrange(int arr[], int n) {
        int wrongIndex = -1;

        for (int index = 0; index < n; index++) {
            if (wrongIndex != -1) {
                if (((arr[index] >= 0) && (arr[wrongIndex] < 0)) || ((arr[index] < 0) && (arr[wrongIndex] >= 0))) {
                    rightRotate(arr, wrongIndex, index);

                    if (index - wrongIndex >= 2)
                        wrongIndex += 2;
                    else
                        wrongIndex = -1;
                }
            } else {
                if ((arr[index] < 0 && index % 2 == 1) || (arr[index] >= 0 && index % 2 == 0))
                    wrongIndex = index;
            }
        }
    }

    void printArray(int arr[], int n) {
        for (int i = 0; i < n; i++)
            System.out.print(arr[i] + " ");
        System.out.println("");
    }

    // Driver Code
    public static void main(String[] args) {
        RearrangeArray rearrange = new RearrangeArray();

        int arr[] = { -5, -2, 5, 2, 4, 7, 1, 8, 0, -8 };
        int n = arr.length;

        System.out.println("Given array is ");
        rearrange.printArray(arr, n);

        rearrange.rearrange(arr, n);

        System.out.println("RearrangeD array is ");
        rearrange.printArray(arr, n);
    }
}