class Solution {
    int median(int matrix[][], int r, int c) {
        int low = Integer.MIN_VALUE;
        int high = Integer.MAX_VALUE;
        
        while(low <= high) {
            int mid = (low + high) >> 1;
            int count = 0;
            
            for(int i = 0; i < r; i++) {
                count += countSmallerThanMid(matrix[i], mid);
            }
            
            if(count <= (r * c) / 2) low = mid + 1;
            else high = mid - 1;
        }
        
        return low;
    }
    int countSmallerThanMid(int[] row, int mid) {
        int l = 0;
        int h = row.length-1;
        
        while(l <= h) {
            int m = (l + h) >> 1;
            
            if(row[m] <= mid) l = m + 1;
            else h = m - 1;
        }
        
        return l;
    }

}